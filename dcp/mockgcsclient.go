// Code generated by MockGen. DO NOT EDIT.
// Source: gcsclient.go

package dcp

import (
	storage "cloud.google.com/go/storage"
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockGCS is a mock of GCS interface
type MockGCS struct {
	ctrl     *gomock.Controller
	recorder *MockGCSMockRecorder
}

// MockGCSMockRecorder is the mock recorder for MockGCS
type MockGCSMockRecorder struct {
	mock *MockGCS
}

// NewMockGCS creates a new mock instance
func NewMockGCS(ctrl *gomock.Controller) *MockGCS {
	mock := &MockGCS{ctrl: ctrl}
	mock.recorder = &MockGCSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockGCS) EXPECT() *MockGCSMockRecorder {
	return _m.recorder
}

// GetAttrs mocks base method
func (_m *MockGCS) GetAttrs(bucketName string, objectName string) (*storage.ObjectAttrs, error) {
	ret := _m.ctrl.Call(_m, "GetAttrs", bucketName, objectName)
	ret0, _ := ret[0].(*storage.ObjectAttrs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAttrs indicates an expected call of GetAttrs
func (_mr *MockGCSMockRecorder) GetAttrs(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetAttrs", reflect.TypeOf((*MockGCS)(nil).GetAttrs), arg0, arg1)
}

// NewReader mocks base method
func (_m *MockGCS) NewReader(bucketName string, objectName string) (io.ReadCloser, error) {
	ret := _m.ctrl.Call(_m, "NewReader", bucketName, objectName)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewReader indicates an expected call of NewReader
func (_mr *MockGCSMockRecorder) NewReader(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "NewReader", reflect.TypeOf((*MockGCS)(nil).NewReader), arg0, arg1)
}

// NewWriter mocks base method
func (_m *MockGCS) NewWriter(bucketName string, objectName string) io.WriteCloser {
	ret := _m.ctrl.Call(_m, "NewWriter", bucketName, objectName)
	ret0, _ := ret[0].(io.WriteCloser)
	return ret0
}

// NewWriter indicates an expected call of NewWriter
func (_mr *MockGCSMockRecorder) NewWriter(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "NewWriter", reflect.TypeOf((*MockGCS)(nil).NewWriter), arg0, arg1)
}
