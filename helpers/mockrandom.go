// Code generated by MockGen. DO NOT EDIT.
// Source: random.go

// Package helpers is a generated GoMock package.
package helpers

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDistribution is a mock of Distribution interface
type MockDistribution struct {
	ctrl     *gomock.Controller
	recorder *MockDistributionMockRecorder
}

// MockDistributionMockRecorder is the mock recorder for MockDistribution
type MockDistributionMockRecorder struct {
	mock *MockDistribution
}

// NewMockDistribution creates a new mock instance
func NewMockDistribution(ctrl *gomock.Controller) *MockDistribution {
	mock := &MockDistribution{ctrl: ctrl}
	mock.recorder = &MockDistributionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDistribution) EXPECT() *MockDistributionMockRecorder {
	return m.recorder
}

// GetNext mocks base method
func (m *MockDistribution) GetNext() int {
	ret := m.ctrl.Call(m, "GetNext")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetNext indicates an expected call of GetNext
func (mr *MockDistributionMockRecorder) GetNext() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNext", reflect.TypeOf((*MockDistribution)(nil).GetNext))
}

// Max mocks base method
func (m *MockDistribution) Max() int {
	ret := m.ctrl.Call(m, "Max")
	ret0, _ := ret[0].(int)
	return ret0
}

// Max indicates an expected call of Max
func (mr *MockDistributionMockRecorder) Max() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Max", reflect.TypeOf((*MockDistribution)(nil).Max))
}
