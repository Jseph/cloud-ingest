// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

/*
Package task_go_proto is a generated protocol buffer package.

It is generated from these files:
	task.proto

It has these top-level messages:
	Spec
	ListSpec
	ProcessListSpec
	CopySpec
	TaskReqMsg
	TaskRespMsg
*/
package task_go_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Specifies the task operation that a task performs.
type Type int32

const (
	Type_UNSET_TYPE   Type = 0
	Type_LIST         Type = 1
	Type_PROCESS_LIST Type = 2
	Type_COPY         Type = 3
)

var Type_name = map[int32]string{
	0: "UNSET_TYPE",
	1: "LIST",
	2: "PROCESS_LIST",
	3: "COPY",
}
var Type_value = map[string]int32{
	"UNSET_TYPE":   0,
	"LIST":         1,
	"PROCESS_LIST": 2,
	"COPY":         3,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Specifies the current status of the cloud ingest task.
type Status int32

const (
	Status_UNSET_STATUS Status = 0
	Status_UNQUEUED     Status = 1
	Status_QUEUED       Status = 2
	Status_FAILED       Status = 3
	Status_SUCCESS      Status = 4
)

var Status_name = map[int32]string{
	0: "UNSET_STATUS",
	1: "UNQUEUED",
	2: "QUEUED",
	3: "FAILED",
	4: "SUCCESS",
}
var Status_value = map[string]int32{
	"UNSET_STATUS": 0,
	"UNQUEUED":     1,
	"QUEUED":       2,
	"FAILED":       3,
	"SUCCESS":      4,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Specifies the classes of failures that a task can have.
type FailureType int32

const (
	FailureType_UNSET_FAILURE_TYPE     FailureType = 0
	FailureType_UNKNOWN_FAILURE        FailureType = 1
	FailureType_FILE_MODIFIED_FAILURE  FailureType = 2
	FailureType_HASH_MISMATCH_FAILURE  FailureType = 3
	FailureType_PRECONDITION_FAILURE   FailureType = 4
	FailureType_FILE_NOT_FOUND_FAILURE FailureType = 5
	FailureType_PERMISSION_FAILURE     FailureType = 6
)

var FailureType_name = map[int32]string{
	0: "UNSET_FAILURE_TYPE",
	1: "UNKNOWN_FAILURE",
	2: "FILE_MODIFIED_FAILURE",
	3: "HASH_MISMATCH_FAILURE",
	4: "PRECONDITION_FAILURE",
	5: "FILE_NOT_FOUND_FAILURE",
	6: "PERMISSION_FAILURE",
}
var FailureType_value = map[string]int32{
	"UNSET_FAILURE_TYPE":     0,
	"UNKNOWN_FAILURE":        1,
	"FILE_MODIFIED_FAILURE":  2,
	"HASH_MISMATCH_FAILURE":  3,
	"PRECONDITION_FAILURE":   4,
	"FILE_NOT_FOUND_FAILURE": 5,
	"PERMISSION_FAILURE":     6,
}

func (x FailureType) String() string {
	return proto.EnumName(FailureType_name, int32(x))
}
func (FailureType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// Contains information about a task. A task is a unit of work, one of:
// 1) listing the contents of a single directory
// 2) processing a list file
// 3) copying a single file
// Tasks might be incremental and require multiple request-response round trips
// to complete.
type Spec struct {
	// Types that are valid to be assigned to Spec:
	//	*Spec_ListSpec
	//	*Spec_ProcessListSpec
	//	*Spec_CopySpec
	Spec isSpec_Spec `protobuf_oneof:"spec"`
}

func (m *Spec) Reset()                    { *m = Spec{} }
func (m *Spec) String() string            { return proto.CompactTextString(m) }
func (*Spec) ProtoMessage()               {}
func (*Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isSpec_Spec interface {
	isSpec_Spec()
}

type Spec_ListSpec struct {
	ListSpec *ListSpec `protobuf:"bytes,1,opt,name=list_spec,json=listSpec,oneof"`
}
type Spec_ProcessListSpec struct {
	ProcessListSpec *ProcessListSpec `protobuf:"bytes,2,opt,name=process_list_spec,json=processListSpec,oneof"`
}
type Spec_CopySpec struct {
	CopySpec *CopySpec `protobuf:"bytes,3,opt,name=copy_spec,json=copySpec,oneof"`
}

func (*Spec_ListSpec) isSpec_Spec()        {}
func (*Spec_ProcessListSpec) isSpec_Spec() {}
func (*Spec_CopySpec) isSpec_Spec()        {}

func (m *Spec) GetSpec() isSpec_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Spec) GetListSpec() *ListSpec {
	if x, ok := m.GetSpec().(*Spec_ListSpec); ok {
		return x.ListSpec
	}
	return nil
}

func (m *Spec) GetProcessListSpec() *ProcessListSpec {
	if x, ok := m.GetSpec().(*Spec_ProcessListSpec); ok {
		return x.ProcessListSpec
	}
	return nil
}

func (m *Spec) GetCopySpec() *CopySpec {
	if x, ok := m.GetSpec().(*Spec_CopySpec); ok {
		return x.CopySpec
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Spec) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Spec_OneofMarshaler, _Spec_OneofUnmarshaler, _Spec_OneofSizer, []interface{}{
		(*Spec_ListSpec)(nil),
		(*Spec_ProcessListSpec)(nil),
		(*Spec_CopySpec)(nil),
	}
}

func _Spec_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Spec)
	// spec
	switch x := m.Spec.(type) {
	case *Spec_ListSpec:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ListSpec); err != nil {
			return err
		}
	case *Spec_ProcessListSpec:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ProcessListSpec); err != nil {
			return err
		}
	case *Spec_CopySpec:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CopySpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Spec.Spec has unexpected type %T", x)
	}
	return nil
}

func _Spec_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Spec)
	switch tag {
	case 1: // spec.list_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ListSpec)
		err := b.DecodeMessage(msg)
		m.Spec = &Spec_ListSpec{msg}
		return true, err
	case 2: // spec.process_list_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProcessListSpec)
		err := b.DecodeMessage(msg)
		m.Spec = &Spec_ProcessListSpec{msg}
		return true, err
	case 3: // spec.copy_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CopySpec)
		err := b.DecodeMessage(msg)
		m.Spec = &Spec_CopySpec{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Spec_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Spec)
	// spec
	switch x := m.Spec.(type) {
	case *Spec_ListSpec:
		s := proto.Size(x.ListSpec)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Spec_ProcessListSpec:
		s := proto.Size(x.ProcessListSpec)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Spec_CopySpec:
		s := proto.Size(x.CopySpec)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Contains the information about a list task. A list task is responsible for
// listing the contents of a directory.
type ListSpec struct {
	DstListResultBucket   string `protobuf:"bytes,1,opt,name=dst_list_result_bucket,json=dstListResultBucket" json:"dst_list_result_bucket,omitempty"`
	DstListResultObject   string `protobuf:"bytes,2,opt,name=dst_list_result_object,json=dstListResultObject" json:"dst_list_result_object,omitempty"`
	SrcDirectory          string `protobuf:"bytes,3,opt,name=src_directory,json=srcDirectory" json:"src_directory,omitempty"`
	ExpectedGenerationNum int64  `protobuf:"varint,4,opt,name=expected_generation_num,json=expectedGenerationNum" json:"expected_generation_num,omitempty"`
}

func (m *ListSpec) Reset()                    { *m = ListSpec{} }
func (m *ListSpec) String() string            { return proto.CompactTextString(m) }
func (*ListSpec) ProtoMessage()               {}
func (*ListSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListSpec) GetDstListResultBucket() string {
	if m != nil {
		return m.DstListResultBucket
	}
	return ""
}

func (m *ListSpec) GetDstListResultObject() string {
	if m != nil {
		return m.DstListResultObject
	}
	return ""
}

func (m *ListSpec) GetSrcDirectory() string {
	if m != nil {
		return m.SrcDirectory
	}
	return ""
}

func (m *ListSpec) GetExpectedGenerationNum() int64 {
	if m != nil {
		return m.ExpectedGenerationNum
	}
	return 0
}

// Contains the information about a process list task. A process list task is
// responsible for listing a small chunk of the list task.
type ProcessListSpec struct {
	DstListResultBucket string `protobuf:"bytes,1,opt,name=dst_list_result_bucket,json=dstListResultBucket" json:"dst_list_result_bucket,omitempty"`
	DstListResultObject string `protobuf:"bytes,2,opt,name=dst_list_result_object,json=dstListResultObject" json:"dst_list_result_object,omitempty"`
	SrcDirectory        string `protobuf:"bytes,3,opt,name=src_directory,json=srcDirectory" json:"src_directory,omitempty"`
	ByteOffset          int64  `protobuf:"varint,4,opt,name=byte_offset,json=byteOffset" json:"byte_offset,omitempty"`
}

func (m *ProcessListSpec) Reset()                    { *m = ProcessListSpec{} }
func (m *ProcessListSpec) String() string            { return proto.CompactTextString(m) }
func (*ProcessListSpec) ProtoMessage()               {}
func (*ProcessListSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProcessListSpec) GetDstListResultBucket() string {
	if m != nil {
		return m.DstListResultBucket
	}
	return ""
}

func (m *ProcessListSpec) GetDstListResultObject() string {
	if m != nil {
		return m.DstListResultObject
	}
	return ""
}

func (m *ProcessListSpec) GetSrcDirectory() string {
	if m != nil {
		return m.SrcDirectory
	}
	return ""
}

func (m *ProcessListSpec) GetByteOffset() int64 {
	if m != nil {
		return m.ByteOffset
	}
	return 0
}

// Contains the information about a copy task. A copy task is responsible for
// copying a single file.
type CopySpec struct {
	SrcFile               string `protobuf:"bytes,1,opt,name=src_file,json=srcFile" json:"src_file,omitempty"`
	DstBucket             string `protobuf:"bytes,2,opt,name=dst_bucket,json=dstBucket" json:"dst_bucket,omitempty"`
	DstObject             string `protobuf:"bytes,3,opt,name=dst_object,json=dstObject" json:"dst_object,omitempty"`
	ExpectedGenerationNum int64  `protobuf:"varint,4,opt,name=expected_generation_num,json=expectedGenerationNum" json:"expected_generation_num,omitempty"`
	Bandwidth             int64  `protobuf:"varint,5,opt,name=bandwidth" json:"bandwidth,omitempty"`
	// Fields only for managing resumable copies.
	FileBytes         int64  `protobuf:"varint,6,opt,name=file_bytes,json=fileBytes" json:"file_bytes,omitempty"`
	FileMTime         int64  `protobuf:"varint,7,opt,name=file_m_time,json=fileMTime" json:"file_m_time,omitempty"`
	BytesCopied       int64  `protobuf:"varint,8,opt,name=bytes_copied,json=bytesCopied" json:"bytes_copied,omitempty"`
	Crc32C            uint32 `protobuf:"varint,9,opt,name=crc32c" json:"crc32c,omitempty"`
	BytesToCopy       int64  `protobuf:"varint,10,opt,name=bytes_to_copy,json=bytesToCopy" json:"bytes_to_copy,omitempty"`
	ResumableUploadId string `protobuf:"bytes,11,opt,name=resumable_upload_id,json=resumableUploadId" json:"resumable_upload_id,omitempty"`
}

func (m *CopySpec) Reset()                    { *m = CopySpec{} }
func (m *CopySpec) String() string            { return proto.CompactTextString(m) }
func (*CopySpec) ProtoMessage()               {}
func (*CopySpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CopySpec) GetSrcFile() string {
	if m != nil {
		return m.SrcFile
	}
	return ""
}

func (m *CopySpec) GetDstBucket() string {
	if m != nil {
		return m.DstBucket
	}
	return ""
}

func (m *CopySpec) GetDstObject() string {
	if m != nil {
		return m.DstObject
	}
	return ""
}

func (m *CopySpec) GetExpectedGenerationNum() int64 {
	if m != nil {
		return m.ExpectedGenerationNum
	}
	return 0
}

func (m *CopySpec) GetBandwidth() int64 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *CopySpec) GetFileBytes() int64 {
	if m != nil {
		return m.FileBytes
	}
	return 0
}

func (m *CopySpec) GetFileMTime() int64 {
	if m != nil {
		return m.FileMTime
	}
	return 0
}

func (m *CopySpec) GetBytesCopied() int64 {
	if m != nil {
		return m.BytesCopied
	}
	return 0
}

func (m *CopySpec) GetCrc32C() uint32 {
	if m != nil {
		return m.Crc32C
	}
	return 0
}

func (m *CopySpec) GetBytesToCopy() int64 {
	if m != nil {
		return m.BytesToCopy
	}
	return 0
}

func (m *CopySpec) GetResumableUploadId() string {
	if m != nil {
		return m.ResumableUploadId
	}
	return ""
}

// Contains the message sent from the DCP to an Agent to issue a task request.
type TaskReqMsg struct {
	TaskRelRsrcName string `protobuf:"bytes,1,opt,name=task_rel_rsrc_name,json=taskRelRsrcName" json:"task_rel_rsrc_name,omitempty"`
	Spec            *Spec  `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
}

func (m *TaskReqMsg) Reset()                    { *m = TaskReqMsg{} }
func (m *TaskReqMsg) String() string            { return proto.CompactTextString(m) }
func (*TaskReqMsg) ProtoMessage()               {}
func (*TaskReqMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TaskReqMsg) GetTaskRelRsrcName() string {
	if m != nil {
		return m.TaskRelRsrcName
	}
	return ""
}

func (m *TaskReqMsg) GetSpec() *Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// Contains the message sent from the Agent to the DCP in response to a task
// request.
type TaskRespMsg struct {
	TaskRelRsrcName string      `protobuf:"bytes,1,opt,name=task_rel_rsrc_name,json=taskRelRsrcName" json:"task_rel_rsrc_name,omitempty"`
	Status          string      `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	FailureType     FailureType `protobuf:"varint,3,opt,name=failure_type,json=failureType,enum=cloud_ingest_task.FailureType" json:"failure_type,omitempty"`
	FailureMessage  string      `protobuf:"bytes,4,opt,name=failure_message,json=failureMessage" json:"failure_message,omitempty"`
	AgentLogFields  string      `protobuf:"bytes,5,opt,name=agent_log_fields,json=agentLogFields" json:"agent_log_fields,omitempty"`
	ReqSpec         *Spec       `protobuf:"bytes,6,opt,name=req_spec,json=reqSpec" json:"req_spec,omitempty"`
	RespSpec        *Spec       `protobuf:"bytes,7,opt,name=resp_spec,json=respSpec" json:"resp_spec,omitempty"`
}

func (m *TaskRespMsg) Reset()                    { *m = TaskRespMsg{} }
func (m *TaskRespMsg) String() string            { return proto.CompactTextString(m) }
func (*TaskRespMsg) ProtoMessage()               {}
func (*TaskRespMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TaskRespMsg) GetTaskRelRsrcName() string {
	if m != nil {
		return m.TaskRelRsrcName
	}
	return ""
}

func (m *TaskRespMsg) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskRespMsg) GetFailureType() FailureType {
	if m != nil {
		return m.FailureType
	}
	return FailureType_UNSET_FAILURE_TYPE
}

func (m *TaskRespMsg) GetFailureMessage() string {
	if m != nil {
		return m.FailureMessage
	}
	return ""
}

func (m *TaskRespMsg) GetAgentLogFields() string {
	if m != nil {
		return m.AgentLogFields
	}
	return ""
}

func (m *TaskRespMsg) GetReqSpec() *Spec {
	if m != nil {
		return m.ReqSpec
	}
	return nil
}

func (m *TaskRespMsg) GetRespSpec() *Spec {
	if m != nil {
		return m.RespSpec
	}
	return nil
}

func init() {
	proto.RegisterType((*Spec)(nil), "cloud_ingest_task.Spec")
	proto.RegisterType((*ListSpec)(nil), "cloud_ingest_task.ListSpec")
	proto.RegisterType((*ProcessListSpec)(nil), "cloud_ingest_task.ProcessListSpec")
	proto.RegisterType((*CopySpec)(nil), "cloud_ingest_task.CopySpec")
	proto.RegisterType((*TaskReqMsg)(nil), "cloud_ingest_task.TaskReqMsg")
	proto.RegisterType((*TaskRespMsg)(nil), "cloud_ingest_task.TaskRespMsg")
	proto.RegisterEnum("cloud_ingest_task.Type", Type_name, Type_value)
	proto.RegisterEnum("cloud_ingest_task.Status", Status_name, Status_value)
	proto.RegisterEnum("cloud_ingest_task.FailureType", FailureType_name, FailureType_value)
}

func init() { proto.RegisterFile("task.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 887 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xdf, 0x6e, 0xe3, 0xc4,
	0x17, 0xae, 0x93, 0x6c, 0x62, 0x9f, 0xa4, 0x8d, 0x3b, 0xfd, 0x6d, 0xd6, 0xfb, 0x03, 0x96, 0x12,
	0x2e, 0xa8, 0xba, 0x52, 0x2f, 0x5a, 0xc4, 0x05, 0xe2, 0x26, 0x4d, 0x1c, 0x6a, 0x91, 0xd8, 0xc1,
	0x7f, 0x84, 0x96, 0x9b, 0x91, 0x33, 0x9e, 0x04, 0x53, 0x3b, 0x76, 0x3d, 0x13, 0x41, 0x9e, 0x80,
	0xb7, 0x42, 0xe2, 0x11, 0xe0, 0x8a, 0xc7, 0x41, 0x33, 0xb6, 0x93, 0xb2, 0x94, 0x95, 0xe0, 0x8a,
	0xab, 0xcc, 0x7c, 0xdf, 0x39, 0xdf, 0x7c, 0xe7, 0xcc, 0x9c, 0x18, 0x80, 0x87, 0xec, 0xfe, 0x2a,
	0x2f, 0x32, 0x9e, 0xa1, 0x53, 0x92, 0x64, 0xdb, 0x08, 0xc7, 0x9b, 0x35, 0x65, 0x1c, 0x0b, 0x62,
	0xf8, 0xbb, 0x02, 0x2d, 0x2f, 0xa7, 0x04, 0x7d, 0x0e, 0x5a, 0x12, 0x33, 0x8e, 0x59, 0x4e, 0x89,
	0xa1, 0x9c, 0x2b, 0x17, 0xdd, 0xeb, 0xf7, 0xae, 0xfe, 0x12, 0x7f, 0x35, 0x8b, 0x19, 0x17, 0xf1,
	0x77, 0x47, 0xae, 0x9a, 0x54, 0x6b, 0xb4, 0x80, 0xd3, 0xbc, 0xc8, 0x08, 0x65, 0x0c, 0x1f, 0x34,
	0x1a, 0x52, 0x63, 0xf8, 0x84, 0xc6, 0xa2, 0x8c, 0x7d, 0x24, 0xd5, 0xcf, 0xff, 0x0c, 0x09, 0x37,
	0x24, 0xcb, 0x77, 0xa5, 0x52, 0xf3, 0x6f, 0xdd, 0x8c, 0xb3, 0x7c, 0x57, 0xbb, 0x21, 0xd5, 0xfa,
	0xb6, 0x0d, 0x2d, 0x91, 0x36, 0xfc, 0x55, 0x01, 0x75, 0x2f, 0x78, 0x03, 0x83, 0x88, 0xf1, 0xd2,
	0x5e, 0x41, 0xd9, 0x36, 0xe1, 0x78, 0xb9, 0x25, 0xf7, 0x94, 0xcb, 0x5a, 0x35, 0xf7, 0x2c, 0x62,
	0x5c, 0x04, 0xbb, 0x92, 0xbb, 0x95, 0xd4, 0x53, 0x49, 0xd9, 0xf2, 0x7b, 0x4a, 0xb8, 0x2c, 0xee,
	0xed, 0x24, 0x47, 0x52, 0xe8, 0x63, 0x38, 0x66, 0x05, 0xc1, 0x51, 0x5c, 0x50, 0xc2, 0xb3, 0x62,
	0x27, 0xed, 0x6b, 0x6e, 0x8f, 0x15, 0x64, 0x52, 0x63, 0xe8, 0x33, 0x78, 0x41, 0x7f, 0xcc, 0x29,
	0xe1, 0x34, 0xc2, 0x6b, 0xba, 0xa1, 0x45, 0xc8, 0xe3, 0x6c, 0x83, 0x37, 0xdb, 0xd4, 0x68, 0x9d,
	0x2b, 0x17, 0x4d, 0xf7, 0x79, 0x4d, 0x7f, 0xb9, 0x67, 0xed, 0x6d, 0x3a, 0xfc, 0x45, 0x81, 0xfe,
	0x5b, 0xed, 0xfb, 0xaf, 0x95, 0xf6, 0x21, 0x74, 0x97, 0x3b, 0x4e, 0x71, 0xb6, 0x5a, 0x31, 0xca,
	0xab, 0x72, 0x40, 0x40, 0x8e, 0x44, 0x86, 0x3f, 0x35, 0x41, 0xad, 0x2f, 0x0e, 0xbd, 0x04, 0x55,
	0x48, 0xae, 0xe2, 0x84, 0x56, 0x76, 0x3b, 0xac, 0x20, 0xd3, 0x38, 0xa1, 0xe8, 0x03, 0x00, 0x61,
	0xb1, 0xaa, 0xa5, 0xb4, 0xa5, 0x45, 0xac, 0xae, 0xa0, 0xa2, 0x2b, 0xd7, 0xcd, 0x3d, 0x5d, 0x79,
	0xfd, 0x97, 0x1d, 0x46, 0xef, 0x83, 0xb6, 0x0c, 0x37, 0xd1, 0x0f, 0x71, 0xc4, 0xbf, 0x33, 0x9e,
	0xc9, 0xc8, 0x03, 0x20, 0x0e, 0x15, 0x56, 0xb1, 0x28, 0x87, 0x19, 0xed, 0x92, 0x16, 0xc8, 0xad,
	0x00, 0xd0, 0x2b, 0xe8, 0x4a, 0x3a, 0xc5, 0x3c, 0x4e, 0xa9, 0xd1, 0x39, 0xf0, 0x73, 0x3f, 0x4e,
	0x29, 0xfa, 0x08, 0x7a, 0x32, 0x13, 0x93, 0x2c, 0x8f, 0x69, 0x64, 0xa8, 0x32, 0x40, 0xf6, 0x8b,
	0x8d, 0x25, 0x84, 0x06, 0xd0, 0x26, 0x05, 0xb9, 0xb9, 0x26, 0x86, 0x76, 0xae, 0x5c, 0x1c, 0xbb,
	0xd5, 0x0e, 0x0d, 0xe1, 0xb8, 0x4c, 0xe5, 0x99, 0xc8, 0xde, 0x19, 0xf0, 0x28, 0xd7, 0xcf, 0x44,
	0x43, 0xd1, 0x15, 0x9c, 0x89, 0xbb, 0x4c, 0xc3, 0x65, 0x42, 0xf1, 0x36, 0x4f, 0xb2, 0x30, 0xc2,
	0x71, 0x64, 0x74, 0x65, 0x6f, 0x4e, 0xf7, 0x54, 0x20, 0x19, 0x2b, 0x1a, 0xae, 0x00, 0xfc, 0x90,
	0xdd, 0xbb, 0xf4, 0x61, 0xce, 0xd6, 0xe8, 0x35, 0x20, 0x31, 0x54, 0xb8, 0xa0, 0x09, 0x2e, 0xc4,
	0xa5, 0x6c, 0xc2, 0xb4, 0xbe, 0x94, 0x3e, 0x97, 0x71, 0x89, 0xcb, 0x0a, 0x62, 0x87, 0x29, 0x45,
	0xaf, 0xcb, 0x21, 0xab, 0xa6, 0xfc, 0xc5, 0x13, 0xb3, 0x29, 0xae, 0xd7, 0x2d, 0x27, 0xf1, 0xb7,
	0x06, 0x74, 0xcb, 0x83, 0x58, 0xfe, 0x8f, 0x4f, 0x1a, 0x40, 0x9b, 0xf1, 0x90, 0x6f, 0x59, 0xf5,
	0x04, 0xaa, 0x1d, 0x1a, 0x41, 0x6f, 0x15, 0xc6, 0xc9, 0xb6, 0xa0, 0x98, 0xef, 0x72, 0x2a, 0x5f,
	0xc0, 0xc9, 0xf5, 0xab, 0x27, 0x9c, 0x4c, 0xcb, 0x30, 0x7f, 0x97, 0x53, 0xb7, 0xbb, 0x3a, 0x6c,
	0xd0, 0x27, 0xd0, 0xaf, 0x25, 0x52, 0xca, 0x58, 0xb8, 0xa6, 0xf2, 0x6d, 0x68, 0xee, 0x49, 0x05,
	0xcf, 0x4b, 0x14, 0x5d, 0x80, 0x1e, 0xae, 0xe9, 0x86, 0xe3, 0x24, 0x5b, 0xe3, 0x55, 0x4c, 0x93,
	0x88, 0xc9, 0xb7, 0xa1, 0xb9, 0x27, 0x12, 0x9f, 0x65, 0xeb, 0xa9, 0x44, 0xd1, 0x35, 0xa8, 0x05,
	0x7d, 0x28, 0xff, 0xb7, 0xda, 0xef, 0xee, 0x4d, 0xa7, 0xa0, 0x0f, 0x72, 0x06, 0x3e, 0x05, 0xad,
	0xa0, 0x2c, 0x2f, 0x93, 0x3a, 0xef, 0x4e, 0x52, 0x45, 0xa4, 0x58, 0x5d, 0x7e, 0x01, 0x2d, 0x59,
	0xc4, 0x09, 0x40, 0x60, 0x7b, 0xa6, 0x8f, 0xfd, 0x37, 0x0b, 0x53, 0x3f, 0x42, 0x2a, 0xb4, 0x66,
	0x96, 0xe7, 0xeb, 0x0a, 0xd2, 0xa1, 0xb7, 0x70, 0x9d, 0xb1, 0xe9, 0x79, 0x58, 0x22, 0x0d, 0xc1,
	0x8d, 0x9d, 0xc5, 0x1b, 0xbd, 0x79, 0x39, 0x87, 0xb6, 0x57, 0xf6, 0x51, 0x87, 0x5e, 0x99, 0xef,
	0xf9, 0x23, 0x3f, 0xf0, 0xf4, 0x23, 0xd4, 0x03, 0x35, 0xb0, 0xbf, 0x0e, 0xcc, 0xc0, 0x9c, 0xe8,
	0x0a, 0x02, 0x68, 0x57, 0xeb, 0x86, 0x58, 0x4f, 0x47, 0xd6, 0xcc, 0x9c, 0xe8, 0x4d, 0xd4, 0x85,
	0x8e, 0x17, 0x8c, 0x85, 0xba, 0xde, 0xba, 0xfc, 0x59, 0x81, 0xee, 0xa3, 0x36, 0xa3, 0x01, 0xa0,
	0x52, 0x54, 0x84, 0x07, 0xae, 0x59, 0x9b, 0x3b, 0x83, 0x7e, 0x60, 0x7f, 0x65, 0x3b, 0xdf, 0xd8,
	0x35, 0xa3, 0x2b, 0xe8, 0x25, 0x3c, 0x9f, 0x5a, 0x33, 0x13, 0xcf, 0x9d, 0x89, 0x35, 0xb5, 0xcc,
	0xc9, 0x9e, 0x6a, 0x08, 0xea, 0x6e, 0xe4, 0xdd, 0xe1, 0xb9, 0xe5, 0xcd, 0x47, 0xfe, 0xf8, 0x6e,
	0x4f, 0x35, 0x91, 0x01, 0xff, 0x5b, 0xb8, 0xe6, 0xd8, 0xb1, 0x27, 0x96, 0x6f, 0x39, 0x07, 0xbd,
	0x16, 0xfa, 0x3f, 0x0c, 0xa4, 0x9e, 0xed, 0xf8, 0x78, 0xea, 0x04, 0xf6, 0x41, 0xf0, 0x99, 0x30,
	0xb6, 0x30, 0xdd, 0xb9, 0xe5, 0x79, 0x8f, 0x73, 0xda, 0xb7, 0xfd, 0x6f, 0x8f, 0xe5, 0x93, 0x5c,
	0x67, 0x58, 0x7e, 0x2b, 0x97, 0x6d, 0xf9, 0x73, 0xf3, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2d,
	0x4b, 0x10, 0xb6, 0x40, 0x07, 0x00, 0x00,
}
