// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jobs.proto

package pb_perf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// A job config for the load testing.
type JobConfig struct {
	// On premise source directory.
	SourceDir string `protobuf:"bytes,1,opt,name=sourceDir" json:"sourceDir,omitempty"`
	// GCS bucket, will create a random bucket if empty.
	DestinationBucket string `protobuf:"bytes,2,opt,name=destinationBucket" json:"destinationBucket,omitempty"`
}

func (m *JobConfig) Reset()                    { *m = JobConfig{} }
func (m *JobConfig) String() string            { return proto.CompactTextString(m) }
func (*JobConfig) ProtoMessage()               {}
func (*JobConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *JobConfig) GetSourceDir() string {
	if m != nil {
		return m.SourceDir
	}
	return ""
}

func (m *JobConfig) GetDestinationBucket() string {
	if m != nil {
		return m.DestinationBucket
	}
	return ""
}

type LoadTestingConfiguration struct {
	// Friendly name of the load testing configuration. Used to identify the job
	// configs created in the system.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// List of job configs for the load test.
	Config []*JobConfig `protobuf:"bytes,2,rep,name=config" json:"config,omitempty"`
}

func (m *LoadTestingConfiguration) Reset()                    { *m = LoadTestingConfiguration{} }
func (m *LoadTestingConfiguration) String() string            { return proto.CompactTextString(m) }
func (*LoadTestingConfiguration) ProtoMessage()               {}
func (*LoadTestingConfiguration) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *LoadTestingConfiguration) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoadTestingConfiguration) GetConfig() []*JobConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*JobConfig)(nil), "pb_perf.JobConfig")
	proto.RegisterType((*LoadTestingConfiguration)(nil), "pb_perf.LoadTestingConfiguration")
}

func init() { proto.RegisterFile("jobs.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xca, 0x4f, 0x2a,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x48, 0x8a, 0x2f, 0x48, 0x2d, 0x4a, 0x53,
	0x0a, 0xe7, 0xe2, 0xf4, 0xca, 0x4f, 0x72, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0x17, 0x92, 0xe1, 0xe2,
	0x2c, 0xce, 0x2f, 0x2d, 0x4a, 0x4e, 0x75, 0xc9, 0x2c, 0x92, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c,
	0x42, 0x08, 0x08, 0xe9, 0x70, 0x09, 0xa6, 0xa4, 0x16, 0x97, 0x64, 0xe6, 0x25, 0x96, 0x64, 0xe6,
	0xe7, 0x39, 0x95, 0x26, 0x67, 0xa7, 0x96, 0x48, 0x30, 0x81, 0x55, 0x61, 0x4a, 0x28, 0x45, 0x71,
	0x49, 0xf8, 0xe4, 0x27, 0xa6, 0x84, 0x80, 0x25, 0xd2, 0x21, 0x16, 0x94, 0x16, 0x81, 0x55, 0x08,
	0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x42, 0xad, 0x00, 0xb3, 0x85, 0xb4, 0xb8, 0xd8, 0x92,
	0xc1, 0x8a, 0x24, 0x98, 0x14, 0x98, 0x35, 0xb8, 0x8d, 0x84, 0xf4, 0xa0, 0x4e, 0xd4, 0x83, 0xbb,
	0x2f, 0x08, 0xaa, 0x22, 0x89, 0x0d, 0xec, 0x09, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa2,
	0xca, 0x86, 0xa5, 0xd2, 0x00, 0x00, 0x00,
}
