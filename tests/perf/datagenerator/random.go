package datagenerator

import "math/rand"

// Distribution represents a random number distribution.
type Distribution interface {
	// GetNext gets the next number of the random distribution.
	GetNext() int
	// Max returns the max number that can be generated by the random distribution.
	Max() int
}

type UniformDistribution struct {
	min int
	max int
}

// NewUniformDistribution creates a new uniform random distribution with range
// [min, max) and a seed.
func NewUniformDistribution(min int, max int, seed int64) *UniformDistribution {
	rand.Seed(seed)
	return &UniformDistribution{
		min: min,
		max: max,
	}
}

func (d UniformDistribution) GetNext() int {
	return d.min + rand.Intn(d.max-d.min)
}

func (d UniformDistribution) Max() int {
	return d.max - 1
}
